version: '3.7'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: web
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres
  postgres_slave:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: web
    depends_on:
      - postgres
    networks:
      - postgres

  webapi:
    container_name: webapi
    build:
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - postgres
      - nginx_network
    ports:
      - "8080:80"
  webapi1:
    container_name: webapi1
    build:
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - postgres
      - nginx_network
    ports:
      - "8081:80"
  webapi2:
    container_name: webapi2
    build:
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - postgres
      - nginx_network
    ports:
      - "8082:80"

  webapp_mirror:
    container_name: webapp_mirror_container
    restart: always
    depends_on:
      - postgres
    build:
      context: .
      dockerfile:  Dockerfile
    networks:
      - postgres
      - nginx_network
    ports:
      - "8079:80"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: pg@admin.com
      PGADMIN_DEFAULT_PASSWORD: aaa
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    networks: 
      - postgres
      - nginx_network

  nginx:
    image: 'byjg/nginx-extras'
    container_name: nginx_container
    depends_on:
      - pgadmin
      - webapi
    volumes:
      - nginx_log:/var/log/nginx
      - ./nginx/nginx_full.conf:/etc/nginx/nginx.conf
      - ./static:/static
    ports:
      - "80:80"
    networks:
      - nginx_network

volumes:
  postgres-data:
  nginx_log:
networks:
  postgres:
    driver: bridge
  nginx_network:
    driver: bridge